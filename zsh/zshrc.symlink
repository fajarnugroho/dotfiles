#!/bin/zsh
#zmodload zsh/zprof
# uncomment this and the last line for zprof info
# zmodload zsh/zprof

# shortcut to this dotfiles path is $DOTFILES
export DOTFILES="$HOME/.dotfiles"

# your project folder that we can `c [tab]` to
export PROJECTS="$HOME/Code"

# your default editor
export EDITOR='vim'
export VEDITOR='code'

# all of our zsh files
typeset -U config_files
config_files=($DOTFILES/*/*.zsh)

# load the path files
for file in ${(M)config_files:#*/path.zsh}; do
  source "$file"
done

# load antibody plugins
source ~/.zsh_plugins.sh

# load everything but the path and completion files
for file in ${${config_files:#*/path.zsh}:#*/completion.zsh}; do
  source "$file"
done

# Execute code in the background to not affect the current session
{
  # Compile zcompdump, if modified, to increase startup speed.
  zcompdump="${ZDOTDIR:-$HOME}/.zcompdump"
  if [[ -s "$zcompdump" && (! -s "${zcompdump}.zwc" || "$zcompdump" -nt "${zcompdump}.zwc") ]]; then
    zcompile "$zcompdump"
  fi
} &!
autoload -Uz compinit
for dump in ~/.zcompdump(N.mh+24); do
  compinit
done
compinit -C
#autoload -Uz compinit
#if [[ -n ~/.zcompdump(#qN.mh+24) ]]; then
  #compinit
#else
  #compinit -C
#fi

# load every completion after autocomplete loads
for file in ${(M)config_files:#*/completion.zsh}; do
  source "$file"
done

unset config_files updated_at

# use .localrc for SUPER SECRET CRAP that you don't
# want in your public, versioned repo.
# shellcheck disable=SC1090
[ -f ~/.localrc ] && . ~/.localrc

# zprof
setopt  autocd autopushd
# source <(kubectl completion zsh)
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH:$HOME/.poetry/bin:$HOME/.local/istio-1.4.0/bin:$HOME/.local/bin"
source $HOME/.local/google-cloud-sdk/completion.zsh.inc
alias gch='git checkout'
alias gps='git push'
alias gpl='git pull'
alias gc='git clone'
alias gst='git status'
alias gb='git branch'
alias gch='git checkout'
alias gps='git push'
alias gpl='git pull'
alias gc='git clone'
alias gst='git status'
alias gg='git log --oneline --graph --color --all --decorate'
alias gm='git merge'
eval "$(pyenv init -)"
#{
#    eval "$(rbenv init -)"
#} &!
#source /usr/share/fzf/completion.zsh
source /usr/local/opt/fzf/shell/completion.zsh
#powerline-daemon -q
#. /usr/lib/python3.7/site-packages/powerline/bindings/zsh/powerline.zsh
# zprof
#powerline-daemon -q
#. /usr/lib/python3.7/site-packages/powerline/bindings/zsh/powerline.zsh

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/Users/nugrohof/.local/google-cloud-sdk/path.zsh.inc' ]; then . '/Users/nugrohof/.local/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/Users/nugrohof/.local/google-cloud-sdk/completion.zsh.inc' ]; then . '/Users/nugrohof/.local/google-cloud-sdk/completion.zsh.inc'; fi
function gi() { curl -sLw n https://www.toptal.com/developers/gitignore/api/$@ ;}
source ~/.iterm2_shell_integration.zsh
complete -C '/usr/local/bin/aws_completer' aws
eval "$(starship init zsh)"
